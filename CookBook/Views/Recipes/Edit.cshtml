@model CookBook.Models.Recipe
@using CookBook.Models

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm("Edit", "Recipes", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="submenu row">
        <button type="button" onclick='location.href="@Url.Action("Index", "Recipes")"'
                class="btn btn-submenu">
            Index
        </button>
        <button type="button" onclick='location.href="@Url.Action("Details", "Recipes", new { id = Model.RecipeID })"'
                class="btn btn-submenu">
            Back
        </button>
        <input type="submit" class="btn btn-submenu" value="Save" />
        <button type="button" onclick='location.href="@Url.Action("Edit", "Recipes", new { id = Model.RecipeID })"'
                class="btn btn-submenu">
            Reload
        </button>
    </div>

    <div id="recipeEditPage" class="form-horizontal">
        @Html.HiddenFor(model => model.RecipeID)

        <div id="recipe">
            <div class="form-group row">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-11">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control nameField" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger", @style="display: none;" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-11">
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control descriptionField", @rows="1" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger", @style = "display: none;" })
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-2">
                    @Html.LabelFor(model => model.Servings, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Servings, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Servings, "", new { @class = "text-danger", @style = "display: none;" })
                    </div>
                </div>
                    
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.PreperationTime, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.PreperationTime, new { htmlAttributes = new { @class = "form-control timeInput" } })
                        @Html.ValidationMessageFor(model => model.PreperationTime, "", new { @class = "text-danger", @style = "display: none;" })
                    </div>
                </div>

                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.InactiveTime, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.InactiveTime, new { htmlAttributes = new { @class = "form-control timeInput" } })
                        @Html.ValidationMessageFor(model => model.InactiveTime, "", new { @class = "text-danger", @style = "display: none;" })
                    </div>
                </div>

                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.CookTime, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CookTime, new { htmlAttributes = new { @class = "form-control timeInput" } })
                        @Html.ValidationMessageFor(model => model.CookTime, "", new { @class = "text-danger", @style = "display: none;" })
                    </div>
                </div>
            </div>
            <div id="recipeErrors" class="alert alert-danger well" style="display:none;"></div>
        </div>

        <div id="ingredientsTable" class="row">
            <h4>
                Ingredients
                <button type="button" onclick="addRow();" title="Click to add a new ingredient."
                       class="btn btn-default">+</button>
            </h4>

            <table border="1" cellpadding="3" class="table">
                <thead>
                    <tr>
                        <th></th>
                        <th class="text-center">
                            Amount
                        </th>
                        <th class="text-center">
                            Unit
                        </th>
                        <th>
                            Description
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>

                    @{
                        var sortedList =
                            from i in Model.Ingredients
                            orderby i.SortIndex
                            select i;

                        for (int rowIndex = 0; rowIndex < sortedList.Count(); rowIndex++)
                        {
                            Ingredient ingredient = sortedList.ElementAt(rowIndex);
                            <tr>
                                <td class="gripColumn" title="Drag to reorder ingredients.">
                                    <span class="ui-icon ui-icon-caret-2-n-s"></span>
                                    <input type="hidden" name="Ingredients.Index" value="@rowIndex" />
                                    <input type="hidden" name="ingredients[@rowIndex].IngredientID" value="@ingredient.IngredientID" />
                                </td>
                                <td class="quantityColumn">
                                    <input class="text-box single-line" title="Please enter a number."
                                           data-val="true" data-val-number="Ingredient quantities must be a number."
                                           id="@("Ingredients_" + rowIndex + "__Quantity")"
                                           name="@("Ingredients[" + rowIndex + "].Quantity")" type="text"
                                           value="@ingredient.Quantity" />
                                    <span class="field-validation-valid text-danger" style="display: none" data-valmsg-replace="true"
                                          data-valmsg-for="@("Ingredients[" + rowIndex + "].Quantity")"></span>
                                </td>
                                <td class="unitOfMeasurementColumn">
                                    <input class="text-box single-line" data-val="true"
                                           data-val-length="The unit of measurement must be a string with a maximum length of 10."
                                           data-val-length-max="10"
                                           id="@("Ingredients_" + rowIndex + "__UnitOfMeasurement")"
                                           name="@("Ingredients[" + rowIndex + "].UnitOfMeasurement")" type="text"
                                           value="@ingredient.UnitOfMeasurement" />
                                    <span class="field-validation-valid text-danger" style="display: none" data-valmsg-replace="true"
                                          data-valmsg-for="@("Ingredients[" + rowIndex + "].UnitOfMeasurement")"></span>
                                </td>
                                <td class="descriptionColumn">
                                    <input class="text-box single-line" data-val="true"
                                           data-val-length="The field Description must be a string with a maximum length of 50."
                                           data-val-length-max="50"
                                           id="@("Ingredients_" + rowIndex + "__Description")"
                                           name="@("Ingredients[" + rowIndex + "].Description")" type="text"
                                           value="@ingredient.Description" />
                                </td>
                                <td class="buttonColumn">
                                    <button type="button" class="deleteButton" title="Click here to delete this ingredient."
                                            onclick="deleteRow(event)">
                                        <span class="ui-icon ui-icon-trash"></span>
                                    </button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
            <div id="ingredientErrors" class="alert alert-danger well" style="display:none;"></div>
        </div>

        <div class="row">
            <h4>
                Procedure
                <button type="button"onclick="addStep();" title="Click to add a step to the procedure."
                       class="btn btn-default">+</button>
            </h4>

            <ol id="procedureList">
                @{
                    var sortedSteps =
                    from i in Model.Procedures
                    orderby i.StepOrder
                    select i;

                    for (int stepIndex = 0; stepIndex < sortedSteps.Count(); stepIndex++)
                    {
                        Procedure procedure = sortedSteps.ElementAt(stepIndex);
                        <li class="recipeStep">
                            <input type="hidden" name="Procedures.Index" value="@stepIndex" />
                            <input type="hidden" name="Procedures[@stepIndex].ProcedureID" value=@procedure.ProcedureID />
                            <textarea rows="1" data-val="true" data-val-length-max="1000"
                                      data-val-length="The field Description must be a string with a maximum length of 1000."
                                      id=@("Procedures_"+stepIndex+"__StepText")
                                      name=@("Procedures["+stepIndex+"].StepText")>@procedure.StepText</textarea>
                                <span class="field-validation-valid text-danger" style="display: none" data-valmsg-replace="true"
                                      data-valmsg-for="@("Procedures["+stepIndex+"].StepText")"></span>
                            </li>
                    }
                }
            </ol>
            <div id="procedureErrors" class="alert alert-danger well" style="display:none;"></div>
        </div>
    </div>

}

@* include hidden templates used to create new ingredients and steps *@
<table>
    <tr class="templateRow" style="display:none">
        <td class="gripColumn">
            <span class="ui-icon ui-icon-caret-2-n-s"></span>
            <input type="hidden" name="Ingredients.Index" value="#" />
            <input type="hidden" name="ingredients[#].IngredientID" value="0" />
        </td>
        <td class="quantityColumn">
            <input class="text-box single-line"
                   data-val="true" data-val-number="Ingredient quantities must be a number."
                   id="Ingredients_#__Quantity" name="Ingredients[#].Quantity" type="text" value="" />
            <span class="field-validation-valid text-danger" style="display: none" data-valmsg-replace="true"
                  data-valmsg-for="@("Ingredients[#].Quantity")"></span>
        </td>
        <td class="unitOfMeasurementColumn">
            <input class="text-box single-line" data-val="true"
                   data-val-length="The unit of measurement must be a string with a maximum length of 10."
                   data-val-length-max="10"
                   id="Ingredients_#__UnitOfMeasurement" name="Ingredients[#].UnitOfMeasurement" type="text" value="" />
            <span class="field-validation-valid text-danger" style="display: none" data-valmsg-replace="true"
                  data-valmsg-for="@("Ingredients[#].UnitOfMeasurement")"></span>
        </td>
        <td class="descriptionColumn">
            <input class="text-box single-line" data-val="true"
                   data-val-length="The field Description must be a string with a maximum length of 50."
                   data-val-length-max="50"
                   id="Ingredients_#__Description" name="Ingredients[#].Description" type="text" value="" />
        </td>
        <td class="buttonColumn">
            <button type="button" class="deleteButton" onclick="deleteRow(event)"><span class="ui-icon ui-icon-trash"></span></button>
        </td>
    </tr>
</table>
<ol style="display: none">
    <li class="templateStep recipeStep">
        <input type="hidden" name="Procedures.Index" value="#" />
        <input type="hidden" name="Procedures[#].ProcedureID" value="0" />
        <textarea data-val="true" rows="1" class="text-box single-line" data-val-length-max="1000"
                data-val-length="The field Description must be a string with a maximum length of 1000."
               id="Procedures_#__StepText" name="Procedures[#].StepText"></textarea>
        <span class="field-validation-valid text-danger" style="display: none" data-valmsg-replace="true"
              data-valmsg-for="Procedures[#].StepText"></span>
    </li>
</ol>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui-1.12.1.custom/jquery-ui.min.js"></script>
    <script src="~/Scripts/autosize.min.js"></script>
    <script src="~/Scripts/recipe-editor.js"></script>
}
